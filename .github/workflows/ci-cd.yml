# .github/workflows/ci-cd.yml
name: CI/CD to Vercel
on:
  push: { branches: [main] }
  pull_request: { branches: [main] }

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix: { node-version: [18.x] }

    steps:
      - uses: actions/checkout@v3

      # ① Frontend 빌드
      - name: Setup Node (Frontend)
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: client/package-lock.json

      - name: Install & Build Frontend
        run: |
          cd client
          npm ci
          npm run lint
          npm run build

      # ② API 설치 (필요하면)
      - name: Setup Node (API)
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: vercel_serverless/package-lock.json

      - name: Install API deps
        run: |
          cd vercel_serverless
          npm ci

      # ③ Vercel에 --prebuilt 로 배포
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: . # 레포 루트
          vercel-args: --prod --prebuilt
          alias-domains: coinproject-lac.vercel.app
